{
    "fitness": -167.4932403564453,
    "window_fn": null,
    "detector_fn": "clipped_detector_fn",
    "window_shape": [
        3,
        3
    ],
    "sympy": "[x_4 - floor(Max(floor(x_5/2 + x_8/2), Min(x_0, x_6))/2), Min(floor(x_2/2 + x_3/2), Max(x_0, x_1))]",
    "genome": "Genome(0: [-1, -3, -3] | 1: [-1, -3, -3] | 2: [-1, -3, -3] | 3: [-1, -3, -3] | 4: [-1, -3, -3] | 5: [-1, -3, -3] | 6: [-1, -3, -3] | 7: [-1, -3, -3] | 8: [-1, -3, -3] | 9: [13, 3, 2] | 10: [6, 6, 8] | 11: [4, 0, 1] | 12: [13, 5, 8] | 13: [7, 1, 6] | 14: [6, 0, 6] | 15: [6, 11, 9] | 16: [7, 2, 14] | 17: [6, 1, 14] | 18: [4, 12, 14] | 19: [6, 10, 10] | 20: [5, 0, 14] | 21: [7, 18, 19] | 22: [13, 20, 20] | 23: [8, 7, 3] | 24: [0, 10, 2] | 25: [9, 5, 6] | 26: [0, 6, 8] | 27: [5, 3, 8] | 28: [13, 21, 21] | 29: [0, 26, 8] | 30: [12, 24, 17] | 31: [0, 26, 8] | 32: [5, 22, 22] | 33: [13, 22, 6] | 34: [5, 28, 21] | 35: [9, 22, 0] | 36: [8, 32, 6] | 37: [10, 2, 5] | 38: [8, 7, 2] | 39: [7, 30, 27] | 40: [11, 7, 36] | 41: [2, 5, 6] | 42: [12, 32, 28] | 43: [10, 4, 34] | 44: [5, 29, 31] | 45: [11, 34, 5] | 46: [13, 3, 43] | 47: [2, 40, 34] | 48: [13, 42, 40] | 49: [9, 34, 42] | 50: [4, 6, 35] | 51: [0, 8, 7] | 52: [3, 7, 4] | 53: [5, 42, 39] | 54: [2, 50, 6] | 55: [1, 45, 44] | 56: [11, 49, 2] | 57: [9, 7, 49] | 58: [2, 55, 4] | 59: [5, 2, 52] | 60: [7, 48, 51] | 61: [9, 53, 8] | 62: [9, 47, 7] | 63: [-2, 43, -3] | 64: [-2, 15, -3])",
    "active_nodes": "CartesianGraph([InputNode(idx: 0, active: True, arity: 0, addresses of inputs [], InputNode(idx: 1, active: True, arity: 0, addresses of inputs [], InputNode(idx: 2, active: True, arity: 0, addresses of inputs [], InputNode(idx: 3, active: True, arity: 0, addresses of inputs [], InputNode(idx: 4, active: True, arity: 0, addresses of inputs [], InputNode(idx: 5, active: True, arity: 0, addresses of inputs [], InputNode(idx: 6, active: True, arity: 0, addresses of inputs [], InputNode(idx: 8, active: True, arity: 0, addresses of inputs [], Avg(idx: 9, active: True, arity: 2, addresses of inputs [3, 2], Max(idx: 11, active: True, arity: 2, addresses of inputs [0, 1], Avg(idx: 12, active: True, arity: 2, addresses of inputs [5, 8], Min(idx: 14, active: True, arity: 2, addresses of inputs [0, 6], Min(idx: 15, active: True, arity: 2, addresses of inputs [11, 9], Max(idx: 18, active: True, arity: 2, addresses of inputs [12, 14], Div2(idx: 21, active: True, arity: 1, addresses of inputs [18], Avg(idx: 28, active: True, arity: 2, addresses of inputs [21, 21], ConditionalAssignment(idx: 34, active: True, arity: 2, addresses of inputs [28, 21], Sub(idx: 43, active: True, arity: 2, addresses of inputs [4, 34], OutputNode(idx: 63, active: True, arity: 1, addresses of inputs [43], OutputNode(idx: 64, active: True, arity: 1, addresses of inputs [15]])",
    "pretty_str": "\n00 * InputNode          \t09 * Avg (03,02)        \t15 * Min (11,09)        \t21 * Div2 (18)          \t27   Conditional        \t33   Avg                \t39   Div2               \t45   AddS               \t51   Const255           \t57   Add                \t63 * OutputNode (43)    \t\n01 * InputNode          \t10   Min                \t16   Div2               \t22   Avg                \t28 * Avg (21,21)        \t34 * Conditional (28,21)\t40   AddS               \t46   Avg                \t52   Inversion          \t58   Identity           \t64 * OutputNode (15)    \t\n02 * InputNode          \t11 * Max (00,01)        \t17   Min                \t23   Div4               \t29   Const255           \t35   Add                \t41   Identity           \t47   Identity           \t53   Conditional        \t59   Conditional        \t                        \t\n03 * InputNode          \t12 * Avg (05,08)        \t18 * Max (12,14)        \t24   Const255           \t30   SubS               \t36   Div4               \t42   SubS               \t48   Avg                \t54   Identity           \t60   Div2               \t                        \t\n04 * InputNode          \t13   Div2               \t19   Min                \t25   Add                \t31   Const255           \t37   Sub                \t43 * Sub (04,34)        \t49   Add                \t55   Const0             \t61   Add                \t                        \t\n05 * InputNode          \t14 * Min (00,06)        \t20   Conditional        \t26   Const255           \t32   Conditional        \t38   Div4               \t44   Conditional        \t50   Max                \t56   AddS               \t62   Add                \t                        \t\n06 * InputNode          \t                        \t                        \t                        \t                        \t                        \t                        \t                        \t                        \t                        \t                        \t\n07   InputNode          \t                        \t                        \t                        \t                        \t                        \t                        \t                        \t                        \t                        \t                        \t\n08 * InputNode          \t                        \t                        \t                        \t                        \t                        \t                        \t                        \t                        \t                        \t                        \t\n"
}