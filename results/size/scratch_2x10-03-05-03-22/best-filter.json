{
    "fitness": -121.09512329101562,
    "window_fn": null,
    "detector_fn": "clipped_detector_fn",
    "window_shape": [
        3,
        3
    ],
    "sympy": "[x_4, floor(floor(floor(x_2/2 + x_7/2)/2 + Min(x_6, Max(x_3, x_8))/2)/2 + Min(x_1, floor(x_0/2 + x_5/2), Max(x_3, x_8))/2)]",
    "genome": "Genome(0: [-1, -3, -3] | 1: [-1, -3, -3] | 2: [-1, -3, -3] | 3: [-1, -3, -3] | 4: [-1, -3, -3] | 5: [-1, -3, -3] | 6: [-1, -3, -3] | 7: [-1, -3, -3] | 8: [-1, -3, -3] | 9: [10, 7, 8] | 10: [13, 0, 5] | 11: [12, 10, 7] | 12: [4, 3, 8] | 13: [6, 12, 6] | 14: [13, 2, 7] | 15: [4, 14, 1] | 16: [6, 10, 1] | 17: [12, 12, 6] | 18: [9, 3, 15] | 19: [6, 16, 12] | 20: [0, 4, 14] | 21: [9, 7, 5] | 22: [13, 14, 13] | 23: [13, 6, 16] | 24: [1, 2, 20] | 25: [5, 19, 19] | 26: [4, 1, 22] | 27: [13, 25, 22] | 28: [7, 1, 25] | 29: [-2, 4, -3] | 30: [-2, 27, -3])",
    "active_nodes": "CartesianGraph([InputNode(idx: 0, active: True, arity: 0, addresses of inputs [], InputNode(idx: 1, active: True, arity: 0, addresses of inputs [], InputNode(idx: 2, active: True, arity: 0, addresses of inputs [], InputNode(idx: 3, active: True, arity: 0, addresses of inputs [], InputNode(idx: 4, active: True, arity: 0, addresses of inputs [], InputNode(idx: 5, active: True, arity: 0, addresses of inputs [], InputNode(idx: 6, active: True, arity: 0, addresses of inputs [], InputNode(idx: 7, active: True, arity: 0, addresses of inputs [], InputNode(idx: 8, active: True, arity: 0, addresses of inputs [], Avg(idx: 10, active: True, arity: 2, addresses of inputs [0, 5], Max(idx: 12, active: True, arity: 2, addresses of inputs [3, 8], Min(idx: 13, active: True, arity: 2, addresses of inputs [12, 6], Avg(idx: 14, active: True, arity: 2, addresses of inputs [2, 7], Min(idx: 16, active: True, arity: 2, addresses of inputs [10, 1], Min(idx: 19, active: True, arity: 2, addresses of inputs [16, 12], Avg(idx: 22, active: True, arity: 2, addresses of inputs [14, 13], ConditionalAssignment(idx: 25, active: True, arity: 2, addresses of inputs [19, 19], Avg(idx: 27, active: True, arity: 2, addresses of inputs [25, 22], OutputNode(idx: 29, active: True, arity: 1, addresses of inputs [4], OutputNode(idx: 30, active: True, arity: 1, addresses of inputs [27]])",
    "pretty_str": "\n00 * InputNode          \t09   Sub                \t11   SubS               \t13 * Min (12,06)        \t15   Max                \t17   SubS               \t19 * Min (16,12)        \t21   Add                \t23   Avg                \t25 * Conditional (19,19)\t27 * Avg (25,22)        \t29 * OutputNode (04)    \t\n01 * InputNode          \t10 * Avg (00,05)        \t12 * Max (03,08)        \t14 * Avg (02,07)        \t16 * Min (10,01)        \t18   Add                \t20   Const255           \t22 * Avg (14,13)        \t24   Const0             \t26   Max                \t28   Div2               \t30 * OutputNode (27)    \t\n02 * InputNode          \t                        \t                        \t                        \t                        \t                        \t                        \t                        \t                        \t                        \t                        \t                        \t\n03 * InputNode          \t                        \t                        \t                        \t                        \t                        \t                        \t                        \t                        \t                        \t                        \t                        \t\n04 * InputNode          \t                        \t                        \t                        \t                        \t                        \t                        \t                        \t                        \t                        \t                        \t                        \t\n05 * InputNode          \t                        \t                        \t                        \t                        \t                        \t                        \t                        \t                        \t                        \t                        \t                        \t\n06 * InputNode          \t                        \t                        \t                        \t                        \t                        \t                        \t                        \t                        \t                        \t                        \t                        \t\n07 * InputNode          \t                        \t                        \t                        \t                        \t                        \t                        \t                        \t                        \t                        \t                        \t                        \t\n08 * InputNode          \t                        \t                        \t                        \t                        \t                        \t                        \t                        \t                        \t                        \t                        \t                        \t\n"
}