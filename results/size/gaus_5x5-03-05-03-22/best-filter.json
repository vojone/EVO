{
    "fitness": -432.51402282714844,
    "window_fn": null,
    "detector_fn": "clipped_detector_fn",
    "window_shape": [
        3,
        3
    ],
    "sympy": "[255, Max(Min(x_4, floor(Max(x_1, x_3)/2 + Max(x_5, x_7)/2)), Min(x_5, Piecewise((x_3, x_7 > 127), (x_7, True))))]",
    "genome": "Genome(0: [-1, -3, -3] | 1: [-1, -3, -3] | 2: [-1, -3, -3] | 3: [-1, -3, -3] | 4: [-1, -3, -3] | 5: [-1, -3, -3] | 6: [-1, -3, -3] | 7: [-1, -3, -3] | 8: [-1, -3, -3] | 9: [11, 6, 8] | 10: [4, 5, 7] | 11: [9, 3, 5] | 12: [5, 7, 3] | 13: [4, 3, 1] | 14: [13, 10, 13] | 15: [6, 7, 11] | 16: [3, 2, 13] | 17: [13, 13, 11] | 18: [6, 0, 0] | 19: [7, 12, 14] | 20: [0, 3, 3] | 21: [13, 1, 14] | 22: [12, 10, 17] | 23: [6, 12, 5] | 24: [3, 1, 18] | 25: [11, 14, 8] | 26: [5, 4, 15] | 27: [10, 1, 22] | 28: [6, 4, 14] | 29: [3, 19, 3] | 30: [4, 28, 23] | 31: [3, 21, 6] | 32: [0, 22, 6] | 33: [5, 2, 27] | 34: [-2, 32, -3] | 35: [-2, 30, -3])",
    "active_nodes": "CartesianGraph([InputNode(idx: 1, active: True, arity: 0, addresses of inputs [], InputNode(idx: 3, active: True, arity: 0, addresses of inputs [], InputNode(idx: 4, active: True, arity: 0, addresses of inputs [], InputNode(idx: 5, active: True, arity: 0, addresses of inputs [], InputNode(idx: 7, active: True, arity: 0, addresses of inputs [], Max(idx: 10, active: True, arity: 2, addresses of inputs [5, 7], ConditionalAssignment(idx: 12, active: True, arity: 2, addresses of inputs [7, 3], Max(idx: 13, active: True, arity: 2, addresses of inputs [3, 1], Avg(idx: 14, active: True, arity: 2, addresses of inputs [10, 13], Min(idx: 23, active: True, arity: 2, addresses of inputs [12, 5], Min(idx: 28, active: True, arity: 2, addresses of inputs [4, 14], Max(idx: 30, active: True, arity: 2, addresses of inputs [28, 23], Const255(idx: 32, active: True, arity: 0, addresses of inputs [], OutputNode(idx: 34, active: True, arity: 1, addresses of inputs [32], OutputNode(idx: 35, active: True, arity: 1, addresses of inputs [30]])",
    "pretty_str": "\n00   InputNode          \t09   AddS               \t14 * Avg (10,13)        \t19   Div2               \t24   Inversion          \t29   Inversion          \t34 * OutputNode (32)    \t\n01 * InputNode          \t10 * Max (05,07)        \t15   Min                \t20   Const255           \t25   AddS               \t30 * Max (28,23)        \t35 * OutputNode (30)    \t\n02   InputNode          \t11   Add                \t16   Inversion          \t21   Avg                \t26   Conditional        \t31   Inversion          \t                        \t\n03 * InputNode          \t12 * Conditional (07,03)\t17   Avg                \t22   SubS               \t27   Sub                \t32 * Const255           \t                        \t\n04 * InputNode          \t13 * Max (03,01)        \t18   Min                \t23 * Min (12,05)        \t28 * Min (04,14)        \t33   Conditional        \t                        \t\n05 * InputNode          \t                        \t                        \t                        \t                        \t                        \t                        \t\n06   InputNode          \t                        \t                        \t                        \t                        \t                        \t                        \t\n07 * InputNode          \t                        \t                        \t                        \t                        \t                        \t                        \t\n08   InputNode          \t                        \t                        \t                        \t                        \t                        \t                        \t\n"
}