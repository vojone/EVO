{
    "fitness": -94.81816101074219,
    "window_fn": null,
    "detector_fn": "clipped_detector_fn",
    "window_shape": [
        3,
        3
    ],
    "sympy": "[floor(x_4/2 + floor(x_4/4)/2), Min(x_1, x_7, 255 - Max(0, Min(x_1, x_7) - Min(x_3, x_5)), Max(x_2, x_6))]",
    "genome": "Genome(0: [-1, -3, -3] | 1: [-1, -3, -3] | 2: [-1, -3, -3] | 3: [-1, -3, -3] | 4: [-1, -3, -3] | 5: [-1, -3, -3] | 6: [-1, -3, -3] | 7: [-1, -3, -3] | 8: [-1, -3, -3] | 9: [13, 3, 3] | 10: [12, 5, 3] | 11: [7, 4, 2] | 12: [6, 3, 5] | 13: [4, 2, 6] | 14: [6, 7, 1] | 15: [5, 7, 2] | 16: [10, 6, 7] | 17: [8, 4, 1] | 18: [6, 14, 13] | 19: [12, 14, 12] | 20: [8, 14, 14] | 21: [11, 7, 6] | 22: [11, 3, 12] | 23: [13, 17, 4] | 24: [3, 16, 3] | 25: [8, 6, 9] | 26: [5, 4, 0] | 27: [4, 12, 7] | 28: [7, 23, 7] | 29: [0, 19, 5] | 30: [3, 19, 7] | 31: [5, 17, 1] | 32: [10, 9, 26] | 33: [7, 9, 6] | 34: [3, 19, 24] | 35: [5, 16, 1] | 36: [7, 20, 27] | 37: [5, 28, 31] | 38: [10, 33, 29] | 39: [8, 23, 7] | 40: [6, 18, 34] | 41: [4, 0, 34] | 42: [8, 23, 3] | 43: [3, 32, 29] | 44: [1, 18, 25] | 45: [-2, 23, -3] | 46: [-2, 40, -3])",
    "active_nodes": "CartesianGraph([InputNode(idx: 1, active: True, arity: 0, addresses of inputs [], InputNode(idx: 2, active: True, arity: 0, addresses of inputs [], InputNode(idx: 3, active: True, arity: 0, addresses of inputs [], InputNode(idx: 4, active: True, arity: 0, addresses of inputs [], InputNode(idx: 5, active: True, arity: 0, addresses of inputs [], InputNode(idx: 6, active: True, arity: 0, addresses of inputs [], InputNode(idx: 7, active: True, arity: 0, addresses of inputs [], Min(idx: 12, active: True, arity: 2, addresses of inputs [3, 5], Max(idx: 13, active: True, arity: 2, addresses of inputs [2, 6], Min(idx: 14, active: True, arity: 2, addresses of inputs [7, 1], Div4(idx: 17, active: True, arity: 1, addresses of inputs [4], Min(idx: 18, active: True, arity: 2, addresses of inputs [14, 13], SubS(idx: 19, active: True, arity: 2, addresses of inputs [14, 12], Avg(idx: 23, active: True, arity: 2, addresses of inputs [17, 4], Inversion(idx: 34, active: True, arity: 1, addresses of inputs [19], Min(idx: 40, active: True, arity: 2, addresses of inputs [18, 34], OutputNode(idx: 45, active: True, arity: 1, addresses of inputs [23], OutputNode(idx: 46, active: True, arity: 1, addresses of inputs [40]])"
}