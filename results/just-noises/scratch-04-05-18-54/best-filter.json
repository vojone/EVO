{
    "fitness": -127.71792602539062,
    "window_fn": null,
    "detector_fn": "clipped_detector_fn",
    "window_shape": [
        3,
        3
    ],
    "sympy": "[x_4, floor(Piecewise((Min(x_3, Max(x_6, x_8))/2 + Min(floor(x_2/2 + x_7/2), Max(x_0, x_5))/2, x_1 > 127), (Min(x_1, Max(x_6, x_8))/2 + Min(floor(x_2/2 + x_7/2), Max(x_0, x_5))/2, True)))]",
    "genome": "Genome(0: [-1, -3, -3] | 1: [-1, -3, -3] | 2: [-1, -3, -3] | 3: [-1, -3, -3] | 4: [-1, -3, -3] | 5: [-1, -3, -3] | 6: [-1, -3, -3] | 7: [-1, -3, -3] | 8: [-1, -3, -3] | 9: [4, 0, 5] | 10: [10, 0, 6] | 11: [13, 2, 7] | 12: [4, 8, 6] | 13: [5, 1, 3] | 14: [10, 4, 0] | 15: [9, 1, 2] | 16: [9, 3, 4] | 17: [6, 0, 3] | 18: [6, 13, 12] | 19: [6, 9, 11] | 20: [0, 15, 6] | 21: [5, 10, 7] | 22: [5, 2, 16] | 23: [5, 5, 9] | 24: [10, 13, 9] | 25: [5, 9, 7] | 26: [2, 1, 7] | 27: [4, 9, 9] | 28: [2, 13, 19] | 29: [3, 15, 3] | 30: [9, 3, 6] | 31: [13, 19, 17] | 32: [8, 5, 8] | 33: [4, 12, 1] | 34: [4, 9, 9] | 35: [8, 22, 21] | 36: [1, 32, 1] | 37: [12, 5, 6] | 38: [11, 23, 8] | 39: [13, 1, 6] | 40: [11, 0, 29] | 41: [13, 18, 19] | 42: [1, 0, 1] | 43: [10, 29, 25] | 44: [2, 30, 33] | 45: [-2, 4, -3] | 46: [-2, 41, -3])",
    "active_nodes": "CartesianGraph([InputNode(idx: 0, active: True, arity: 0, addresses of inputs [], InputNode(idx: 1, active: True, arity: 0, addresses of inputs [], InputNode(idx: 2, active: True, arity: 0, addresses of inputs [], InputNode(idx: 3, active: True, arity: 0, addresses of inputs [], InputNode(idx: 4, active: True, arity: 0, addresses of inputs [], InputNode(idx: 5, active: True, arity: 0, addresses of inputs [], InputNode(idx: 6, active: True, arity: 0, addresses of inputs [], InputNode(idx: 7, active: True, arity: 0, addresses of inputs [], InputNode(idx: 8, active: True, arity: 0, addresses of inputs [], Max(idx: 9, active: True, arity: 2, addresses of inputs [0, 5], Avg(idx: 11, active: True, arity: 2, addresses of inputs [2, 7], Max(idx: 12, active: True, arity: 2, addresses of inputs [8, 6], ConditionalAssignment(idx: 13, active: True, arity: 2, addresses of inputs [1, 3], Min(idx: 18, active: True, arity: 2, addresses of inputs [13, 12], Min(idx: 19, active: True, arity: 2, addresses of inputs [9, 11], Avg(idx: 41, active: True, arity: 2, addresses of inputs [18, 19], OutputNode(idx: 45, active: True, arity: 1, addresses of inputs [4], OutputNode(idx: 46, active: True, arity: 1, addresses of inputs [41]])",
    "pretty_str": "\n00 * InputNode          \t09 * Max (00,05)        \t18 * Min (13,12)        \t27   Max                \t36   Const0             \t45 * OutputNode (04)    \t\n01 * InputNode          \t10   Sub                \t19 * Min (09,11)        \t28   Identity           \t37   SubS               \t46 * OutputNode (41)    \t\n02 * InputNode          \t11 * Avg (02,07)        \t20   Const255           \t29   Inversion          \t38   AddS               \t                        \t\n03 * InputNode          \t12 * Max (08,06)        \t21   Conditional        \t30   Add                \t39   Avg                \t                        \t\n04 * InputNode          \t13 * Conditional (01,03)\t22   Conditional        \t31   Avg                \t40   AddS               \t                        \t\n05 * InputNode          \t14   Sub                \t23   Conditional        \t32   Div4               \t41 * Avg (18,19)        \t                        \t\n06 * InputNode          \t15   Add                \t24   Sub                \t33   Max                \t42   Const0             \t                        \t\n07 * InputNode          \t16   Add                \t25   Conditional        \t34   Max                \t43   Sub                \t                        \t\n08 * InputNode          \t17   Min                \t26   Identity           \t35   Div4               \t44   Identity           \t                        \t\n"
}