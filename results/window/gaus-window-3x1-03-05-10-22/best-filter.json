{
    "fitness": -463.998779296875,
    "window_fn": null,
    "detector_fn": "clipped_detector_fn",
    "window_shape": [
        3,
        3
    ],
    "sympy": "[Max(255 - x_7, Min(255, x_4 + Min(255, x_0 + x_6, Max(x_1, x_5)))), Max(Min(x_3, x_7), Min(x_4, Max(x_1, x_5)))]",
    "genome": "Genome(0: [-1, -3, -3] | 1: [-1, -3, -3] | 2: [-1, -3, -3] | 3: [-1, -3, -3] | 4: [-1, -3, -3] | 5: [-1, -3, -3] | 6: [-1, -3, -3] | 7: [-1, -3, -3] | 8: [-1, -3, -3] | 9: [3, 3, 5] | 10: [0, 1, 1] | 11: [6, 3, 7] | 12: [4, 1, 5] | 13: [8, 4, 7] | 14: [10, 0, 4] | 15: [0, 5, 5] | 16: [9, 2, 5] | 17: [11, 6, 0] | 18: [9, 6, 3] | 19: [6, 5, 6] | 20: [12, 17, 12] | 21: [1, 3, 11] | 22: [13, 10, 9] | 23: [6, 12, 4] | 24: [6, 12, 17] | 25: [0, 14, 9] | 26: [6, 1, 16] | 27: [11, 4, 24] | 28: [2, 21, 24] | 29: [11, 11, 17] | 30: [6, 4, 25] | 31: [9, 15, 11] | 32: [3, 7, 15] | 33: [1, 22, 1] | 34: [0, 9, 6] | 35: [4, 23, 11] | 36: [6, 22, 6] | 37: [1, 35, 20] | 38: [8, 6, 0] | 39: [4, 27, 32] | 40: [5, 29, 22] | 41: [3, 0, 2] | 42: [13, 6, 2] | 43: [5, 26, 2] | 44: [3, 2, 3] | 45: [-2, 39, -3] | 46: [-2, 35, -3])",
    "active_nodes": "CartesianGraph([InputNode(idx: 0, active: True, arity: 0, addresses of inputs [], InputNode(idx: 1, active: True, arity: 0, addresses of inputs [], InputNode(idx: 3, active: True, arity: 0, addresses of inputs [], InputNode(idx: 4, active: True, arity: 0, addresses of inputs [], InputNode(idx: 5, active: True, arity: 0, addresses of inputs [], InputNode(idx: 6, active: True, arity: 0, addresses of inputs [], InputNode(idx: 7, active: True, arity: 0, addresses of inputs [], Min(idx: 11, active: True, arity: 2, addresses of inputs [3, 7], Max(idx: 12, active: True, arity: 2, addresses of inputs [1, 5], AddS(idx: 17, active: True, arity: 2, addresses of inputs [6, 0], Min(idx: 23, active: True, arity: 2, addresses of inputs [12, 4], Min(idx: 24, active: True, arity: 2, addresses of inputs [12, 17], AddS(idx: 27, active: True, arity: 2, addresses of inputs [4, 24], Inversion(idx: 32, active: True, arity: 1, addresses of inputs [7], Max(idx: 35, active: True, arity: 2, addresses of inputs [23, 11], Max(idx: 39, active: True, arity: 2, addresses of inputs [27, 32], OutputNode(idx: 45, active: True, arity: 1, addresses of inputs [39], OutputNode(idx: 46, active: True, arity: 1, addresses of inputs [35]])",
    "pretty_str": "\n00 * InputNode          \t09   Inversion          \t18   Add                \t27 * AddS (04,24)       \t36   Min                \t45 * OutputNode (39)    \t\n01 * InputNode          \t10   Const255           \t19   Min                \t28   Identity           \t37   Const0             \t46 * OutputNode (35)    \t\n02   InputNode          \t11 * Min (03,07)        \t20   SubS               \t29   AddS               \t38   Div4               \t                        \t\n03 * InputNode          \t12 * Max (01,05)        \t21   Const0             \t30   Min                \t39 * Max (27,32)        \t                        \t\n04 * InputNode          \t13   Div4               \t22   Avg                \t31   Add                \t40   Conditional        \t                        \t\n05 * InputNode          \t14   Sub                \t23 * Min (12,04)        \t32 * Inversion (07)     \t41   Inversion          \t                        \t\n06 * InputNode          \t15   Const255           \t24 * Min (12,17)        \t33   Const0             \t42   Avg                \t                        \t\n07 * InputNode          \t16   Add                \t25   Const255           \t34   Const255           \t43   Conditional        \t                        \t\n08   InputNode          \t17 * AddS (06,00)       \t26   Min                \t35 * Max (23,11)        \t44   Inversion          \t                        \t\n"
}