{
    "fitness": -341.7086181640625,
    "window_fn": null,
    "detector_fn": "clipped_detector_fn",
    "window_shape": [
        5,
        5
    ],
    "sympy": "[x_12 - floor(Min(255, floor(x_12/2 + floor(x_11/2 + x_12/2)/2))/2), floor(x_13/2 + Min(x_7, Max(x_17, x_2))/2)]",
    "genome": "Genome(0: [-1, -3, -3] | 1: [-1, -3, -3] | 2: [-1, -3, -3] | 3: [-1, -3, -3] | 4: [-1, -3, -3] | 5: [-1, -3, -3] | 6: [-1, -3, -3] | 7: [-1, -3, -3] | 8: [-1, -3, -3] | 9: [-1, -3, -3] | 10: [-1, -3, -3] | 11: [-1, -3, -3] | 12: [-1, -3, -3] | 13: [-1, -3, -3] | 14: [-1, -3, -3] | 15: [-1, -3, -3] | 16: [-1, -3, -3] | 17: [-1, -3, -3] | 18: [-1, -3, -3] | 19: [-1, -3, -3] | 20: [-1, -3, -3] | 21: [-1, -3, -3] | 22: [-1, -3, -3] | 23: [-1, -3, -3] | 24: [-1, -3, -3] | 25: [13, 13, 9] | 26: [3, 23, 22] | 27: [12, 23, 1] | 28: [3, 2, 23] | 29: [10, 22, 11] | 30: [9, 3, 19] | 31: [7, 14, 1] | 32: [10, 20, 0] | 33: [0, 16, 4] | 34: [7, 4, 2] | 35: [4, 0, 3] | 36: [10, 5, 24] | 37: [1, 7, 19] | 38: [11, 20, 14] | 39: [0, 2, 6] | 40: [13, 12, 11] | 41: [9, 26, 14] | 42: [3, 2, 20] | 43: [12, 14, 4] | 44: [5, 18, 19] | 45: [1, 20, 39] | 46: [5, 1, 26] | 47: [0, 14, 25] | 48: [4, 0, 0] | 49: [9, 28, 30] | 50: [0, 31, 32] | 51: [5, 27, 15] | 52: [10, 11, 11] | 53: [4, 29, 38] | 54: [4, 2, 17] | 55: [8, 28, 23] | 56: [11, 11, 32] | 57: [6, 37, 43] | 58: [3, 0, 4] | 59: [12, 47, 25] | 60: [11, 24, 2] | 61: [1, 37, 4] | 62: [11, 2, 2] | 63: [13, 12, 26] | 64: [3, 5, 30] | 65: [10, 0, 45] | 66: [13, 12, 40] | 67: [10, 35, 37] | 68: [5, 44, 42] | 69: [13, 16, 37] | 70: [8, 57, 53] | 71: [10, 16, 48] | 72: [6, 47, 10] | 73: [11, 57, 66] | 74: [4, 12, 5] | 75: [0, 54, 44] | 76: [13, 51, 69] | 77: [3, 11, 15] | 78: [3, 8, 62] | 79: [4, 50, 0] | 80: [9, 43, 0] | 81: [1, 13, 65] | 82: [13, 7, 51] | 83: [6, 54, 7] | 84: [0, 6, 24] | 85: [8, 71, 0] | 86: [11, 73, 3] | 87: [4, 59, 0] | 88: [6, 78, 12] | 89: [10, 74, 15] | 90: [0, 10, 68] | 91: [10, 16, 11] | 92: [2, 78, 70] | 93: [6, 64, 56] | 94: [8, 58, 65] | 95: [13, 13, 83] | 96: [4, 76, 58] | 97: [5, 56, 64] | 98: [12, 13, 69] | 99: [4, 5, 12] | 100: [2, 70, 16] | 101: [8, 24, 91] | 102: [6, 15, 76] | 103: [7, 73, 16] | 104: [2, 24, 22] | 105: [6, 2, 12] | 106: [2, 99, 0] | 107: [5, 76, 10] | 108: [1, 89, 83] | 109: [6, 99, 80] | 110: [8, 11, 98] | 111: [1, 12, 80] | 112: [3, 76, 74] | 113: [2, 14, 16] | 114: [10, 20, 83] | 115: [11, 108, 109] | 116: [1, 107, 95] | 117: [8, 14, 2] | 118: [10, 99, 13] | 119: [12, 108, 6] | 120: [1, 1, 98] | 121: [4, 13, 87] | 122: [9, 13, 104] | 123: [7, 17, 113] | 124: [11, 5, 101] | 125: [5, 98, 98] | 126: [6, 6, 102] | 127: [5, 91, 17] | 128: [0, 114, 15] | 129: [0, 11, 85] | 130: [4, 10, 111] | 131: [11, 111, 129] | 132: [3, 1, 16] | 133: [9, 101, 128] | 134: [5, 13, 0] | 135: [9, 126, 103] | 136: [12, 10, 4] | 137: [5, 10, 101] | 138: [10, 105, 20] | 139: [5, 8, 5] | 140: [13, 120, 108] | 141: [4, 121, 121] | 142: [10, 12, 103] | 143: [10, 20, 6] | 144: [13, 103, 113] | 145: [-2, 142, -3] | 146: [-2, 95, -3])",
    "active_nodes": "CartesianGraph([InputNode(idx: 2, active: True, arity: 0, addresses of inputs [], InputNode(idx: 4, active: True, arity: 0, addresses of inputs [], InputNode(idx: 7, active: True, arity: 0, addresses of inputs [], InputNode(idx: 11, active: True, arity: 0, addresses of inputs [], InputNode(idx: 12, active: True, arity: 0, addresses of inputs [], InputNode(idx: 13, active: True, arity: 0, addresses of inputs [], InputNode(idx: 14, active: True, arity: 0, addresses of inputs [], InputNode(idx: 17, active: True, arity: 0, addresses of inputs [], Const0(idx: 37, active: True, arity: 0, addresses of inputs [], Avg(idx: 40, active: True, arity: 2, addresses of inputs [12, 11], SubS(idx: 43, active: True, arity: 2, addresses of inputs [14, 4], Max(idx: 54, active: True, arity: 2, addresses of inputs [2, 17], Min(idx: 57, active: True, arity: 2, addresses of inputs [37, 43], Avg(idx: 66, active: True, arity: 2, addresses of inputs [12, 40], AddS(idx: 73, active: True, arity: 2, addresses of inputs [57, 66], Min(idx: 83, active: True, arity: 2, addresses of inputs [54, 7], Avg(idx: 95, active: True, arity: 2, addresses of inputs [13, 83], Div2(idx: 103, active: True, arity: 1, addresses of inputs [73], Sub(idx: 142, active: True, arity: 2, addresses of inputs [12, 103], OutputNode(idx: 145, active: True, arity: 1, addresses of inputs [142], OutputNode(idx: 146, active: True, arity: 1, addresses of inputs [95]])"
}