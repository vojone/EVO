{
    "fitness": -472.247314453125,
    "sympy": "[255, Min(Max(x_4, x_7), Max(floor(x_3/2 + x_5/2), Min(x_4, x_7)))]",
    "genome": "Genome(0: [-1, -3, -3] | 1: [-1, -3, -3] | 2: [-1, -3, -3] | 3: [-1, -3, -3] | 4: [-1, -3, -3] | 5: [-1, -3, -3] | 6: [-1, -3, -3] | 7: [-1, -3, -3] | 8: [-1, -3, -3] | 9: [1, 5, 8] | 10: [11, 3, 1] | 11: [13, 0, 3] | 12: [6, 7, 4] | 13: [4, 8, 6] | 14: [12, 6, 8] | 15: [6, 7, 4] | 16: [13, 4, 0] | 17: [13, 5, 3] | 18: [10, 7, 14] | 19: [11, 7, 15] | 20: [6, 17, 17] | 21: [9, 4, 5] | 22: [5, 4, 4] | 23: [9, 12, 1] | 24: [11, 0, 10] | 25: [11, 12, 2] | 26: [6, 11, 14] | 27: [4, 22, 7] | 28: [4, 17, 15] | 29: [12, 5, 22] | 30: [1, 10, 7] | 31: [5, 13, 26] | 32: [13, 12, 3] | 33: [0, 13, 14] | 34: [8, 4, 22] | 35: [13, 3, 23] | 36: [0, 19, 33] | 37: [8, 0, 18] | 38: [8, 20, 3] | 39: [10, 0, 30] | 40: [0, 35, 28] | 41: [7, 24, 35] | 42: [7, 18, 30] | 43: [0, 2, 28] | 44: [10, 6, 26] | 45: [11, 6, 3] | 46: [7, 30, 41] | 47: [13, 42, 30] | 48: [9, 41, 37] | 49: [7, 37, 43] | 50: [6, 27, 28] | 51: [0, 2, 29] | 52: [8, 29, 40] | 53: [2, 33, 6] | 54: [13, 41, 38] | 55: [6, 6, 5] | 56: [5, 43, 53] | 57: [1, 53, 46] | 58: [7, 48, 0] | 59: [4, 3, 43] | 60: [10, 38, 37] | 61: [8, 38, 49] | 62: [1, 0, 45] | 63: [-2, 51, -3] | 64: [-2, 50, -3])",
    "active_nodes": "CartesianGraph([InputNode(idx: 3, active: True, arity: 0, addresses of inputs [], InputNode(idx: 4, active: True, arity: 0, addresses of inputs [], InputNode(idx: 5, active: True, arity: 0, addresses of inputs [], InputNode(idx: 7, active: True, arity: 0, addresses of inputs [], Min(idx: 15, active: True, arity: 2, addresses of inputs [7, 4], Avg(idx: 17, active: True, arity: 2, addresses of inputs [5, 3], ConditionalAssignment(idx: 22, active: True, arity: 2, addresses of inputs [4, 4], Max(idx: 27, active: True, arity: 2, addresses of inputs [22, 7], Max(idx: 28, active: True, arity: 2, addresses of inputs [17, 15], Min(idx: 50, active: True, arity: 2, addresses of inputs [27, 28], Const255(idx: 51, active: True, arity: 0, addresses of inputs [], OutputNode(idx: 63, active: True, arity: 1, addresses of inputs [51], OutputNode(idx: 64, active: True, arity: 1, addresses of inputs [50]])",
    "pretty_str": "\n00   InputNode          \t09   Const0             \t18   Sub                \t27 * Max (22,07)        \t36   Const255           \t45   AddS               \t54   Avg                \t63 * OutputNode (51)    \t\n01   InputNode          \t10   AddS               \t19   AddS               \t28 * Max (17,15)        \t37   Div4               \t46   Div2               \t55   Min                \t64 * OutputNode (50)    \t\n02   InputNode          \t11   Avg                \t20   Min                \t29   SubS               \t38   Div4               \t47   Avg                \t56   Conditional        \t                        \t\n03 * InputNode          \t12   Min                \t21   Add                \t30   Const0             \t39   Sub                \t48   Add                \t57   Const0             \t                        \t\n04 * InputNode          \t13   Max                \t22 * Conditional (04,04)\t31   Conditional        \t40   Const255           \t49   Div2               \t58   Div2               \t                        \t\n05 * InputNode          \t14   SubS               \t23   Add                \t32   Avg                \t41   Div2               \t50 * Min (27,28)        \t59   Max                \t                        \t\n06   InputNode          \t15 * Min (07,04)        \t24   AddS               \t33   Const255           \t42   Div2               \t51 * Const255           \t60   Sub                \t                        \t\n07 * InputNode          \t16   Avg                \t25   AddS               \t34   Div4               \t43   Const255           \t52   Div4               \t61   Div4               \t                        \t\n08   InputNode          \t17 * Avg (05,03)        \t26   Min                \t35   Avg                \t44   Sub                \t53   Identity           \t62   Const0             \t                        \t\n"
}