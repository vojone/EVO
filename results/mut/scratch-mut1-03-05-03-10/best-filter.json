{
    "fitness": -114.267333984375,
    "window_fn": null,
    "detector_fn": "clipped_detector_fn",
    "window_shape": [
        3,
        3
    ],
    "sympy": "[x_4, Min(floor(x_1/2 + x_7/2), Max(x_0, x_8), Max(x_2, Piecewise((x_6, x_3 > 127), (x_3, True))), Max(x_3, x_5))]",
    "genome": "Genome(0: [-1, -3, -3] | 1: [-1, -3, -3] | 2: [-1, -3, -3] | 3: [-1, -3, -3] | 4: [-1, -3, -3] | 5: [-1, -3, -3] | 6: [-1, -3, -3] | 7: [-1, -3, -3] | 8: [-1, -3, -3] | 9: [12, 6, 8] | 10: [13, 7, 1] | 11: [4, 8, 0] | 12: [2, 2, 8] | 13: [5, 3, 6] | 14: [4, 5, 3] | 15: [10, 1, 7] | 16: [7, 1, 8] | 17: [10, 8, 6] | 18: [12, 9, 0] | 19: [7, 13, 14] | 20: [8, 8, 8] | 21: [7, 9, 6] | 22: [7, 2, 3] | 23: [9, 6, 6] | 24: [4, 13, 2] | 25: [6, 14, 11] | 26: [9, 0, 13] | 27: [11, 15, 16] | 28: [6, 25, 10] | 29: [13, 24, 15] | 30: [10, 12, 24] | 31: [6, 19, 22] | 32: [11, 26, 20] | 33: [8, 4, 20] | 34: [7, 25, 23] | 35: [3, 7, 14] | 36: [2, 2, 29] | 37: [4, 1, 2] | 38: [2, 3, 34] | 39: [5, 21, 21] | 40: [7, 28, 21] | 41: [2, 24, 22] | 42: [12, 27, 19] | 43: [6, 24, 30] | 44: [4, 21, 7] | 45: [9, 8, 7] | 46: [8, 35, 38] | 47: [7, 38, 43] | 48: [4, 3, 40] | 49: [0, 8, 4] | 50: [9, 32, 36] | 51: [6, 41, 28] | 52: [7, 41, 31] | 53: [12, 2, 1] | 54: [3, 6, 49] | 55: [11, 2, 42] | 56: [3, 43, 48] | 57: [1, 6, 1] | 58: [7, 47, 46] | 59: [11, 39, 52] | 60: [4, 0, 51] | 61: [7, 47, 47] | 62: [1, 36, 36] | 63: [-2, 4, -3] | 64: [-2, 51, -3])",
    "active_nodes": "CartesianGraph([InputNode(idx: 0, active: True, arity: 0, addresses of inputs [], InputNode(idx: 1, active: True, arity: 0, addresses of inputs [], InputNode(idx: 2, active: True, arity: 0, addresses of inputs [], InputNode(idx: 3, active: True, arity: 0, addresses of inputs [], InputNode(idx: 4, active: True, arity: 0, addresses of inputs [], InputNode(idx: 5, active: True, arity: 0, addresses of inputs [], InputNode(idx: 6, active: True, arity: 0, addresses of inputs [], InputNode(idx: 7, active: True, arity: 0, addresses of inputs [], InputNode(idx: 8, active: True, arity: 0, addresses of inputs [], Avg(idx: 10, active: True, arity: 2, addresses of inputs [7, 1], Max(idx: 11, active: True, arity: 2, addresses of inputs [8, 0], ConditionalAssignment(idx: 13, active: True, arity: 2, addresses of inputs [3, 6], Max(idx: 14, active: True, arity: 2, addresses of inputs [5, 3], Max(idx: 24, active: True, arity: 2, addresses of inputs [13, 2], Min(idx: 25, active: True, arity: 2, addresses of inputs [14, 11], Min(idx: 28, active: True, arity: 2, addresses of inputs [25, 10], Identity(idx: 41, active: True, arity: 1, addresses of inputs [24], Min(idx: 51, active: True, arity: 2, addresses of inputs [41, 28], OutputNode(idx: 63, active: True, arity: 1, addresses of inputs [4], OutputNode(idx: 64, active: True, arity: 1, addresses of inputs [51]])",
    "pretty_str": "\n00 * InputNode          \t09   SubS               \t18   SubS               \t27   AddS               \t36   Identity           \t45   Add                \t54   Inversion          \t63 * OutputNode (04)    \t\n01 * InputNode          \t10 * Avg (07,01)        \t19   Div2               \t28 * Min (25,10)        \t37   Max                \t46   Div4               \t55   AddS               \t64 * OutputNode (51)    \t\n02 * InputNode          \t11 * Max (08,00)        \t20   Div4               \t29   Avg                \t38   Identity           \t47   Div2               \t56   Inversion          \t                        \t\n03 * InputNode          \t12   Identity           \t21   Div2               \t30   Sub                \t39   Conditional        \t48   Max                \t57   Const0             \t                        \t\n04 * InputNode          \t13 * Conditional (03,06)\t22   Div2               \t31   Min                \t40   Div2               \t49   Const255           \t58   Div2               \t                        \t\n05 * InputNode          \t14 * Max (05,03)        \t23   Add                \t32   AddS               \t41 * Identity (24)      \t50   Add                \t59   AddS               \t                        \t\n06 * InputNode          \t15   Sub                \t24 * Max (13,02)        \t33   Div4               \t42   SubS               \t51 * Min (41,28)        \t60   Max                \t                        \t\n07 * InputNode          \t16   Div2               \t25 * Min (14,11)        \t34   Div2               \t43   Min                \t52   Div2               \t61   Div2               \t                        \t\n08 * InputNode          \t17   Sub                \t26   Add                \t35   Inversion          \t44   Max                \t53   SubS               \t62   Const0             \t                        \t\n"
}