{
    "fitness": -145.3724365234375,
    "window_fn": null,
    "detector_fn": "clipped_detector_fn",
    "window_shape": [
        3,
        3
    ],
    "sympy": "[x_4 - floor(Max(x_3, floor(x_5/2), floor(x_8/4))/2), Max(Min(x_1, x_6), Min(x_7, x_8))]",
    "genome": "Genome(0: [-1, -3, -3] | 1: [-1, -3, -3] | 2: [-1, -3, -3] | 3: [-1, -3, -3] | 4: [-1, -3, -3] | 5: [-1, -3, -3] | 6: [-1, -3, -3] | 7: [-1, -3, -3] | 8: [-1, -3, -3] | 9: [8, 8, 8] | 10: [7, 5, 8] | 11: [8, 8, 4] | 12: [4, 2, 3] | 13: [12, 8, 5] | 14: [8, 1, 4] | 15: [1, 8, 7] | 16: [6, 7, 8] | 17: [6, 1, 6] | 18: [7, 7, 12] | 19: [2, 7, 17] | 20: [12, 9, 10] | 21: [2, 4, 9] | 22: [4, 17, 16] | 23: [4, 10, 11] | 24: [12, 15, 8] | 25: [8, 16, 15] | 26: [3, 11, 15] | 27: [4, 12, 5] | 28: [6, 19, 8] | 29: [0, 23, 8] | 30: [12, 6, 13] | 31: [4, 15, 3] | 32: [3, 24, 4] | 33: [11, 12, 15] | 34: [4, 3, 23] | 35: [5, 1, 6] | 36: [13, 25, 1] | 37: [2, 5, 19] | 38: [8, 24, 24] | 39: [12, 5, 5] | 40: [0, 22, 31] | 41: [10, 27, 29] | 42: [12, 30, 18] | 43: [9, 0, 30] | 44: [12, 24, 7] | 45: [9, 32, 2] | 46: [4, 36, 33] | 47: [10, 44, 7] | 48: [7, 34, 36] | 49: [1, 42, 29] | 50: [12, 8, 34] | 51: [11, 33, 2] | 52: [9, 2, 38] | 53: [9, 4, 7] | 54: [9, 2, 5] | 55: [0, 52, 2] | 56: [2, 53, 8] | 57: [5, 46, 51] | 58: [5, 42, 46] | 59: [2, 4, 47] | 60: [2, 7, 8] | 61: [10, 4, 48] | 62: [3, 0, 2] | 63: [-2, 61, -3] | 64: [-2, 22, -3])",
    "active_nodes": "CartesianGraph([InputNode(idx: 1, active: True, arity: 0, addresses of inputs [], InputNode(idx: 3, active: True, arity: 0, addresses of inputs [], InputNode(idx: 4, active: True, arity: 0, addresses of inputs [], InputNode(idx: 5, active: True, arity: 0, addresses of inputs [], InputNode(idx: 6, active: True, arity: 0, addresses of inputs [], InputNode(idx: 7, active: True, arity: 0, addresses of inputs [], InputNode(idx: 8, active: True, arity: 0, addresses of inputs [], Div2(idx: 10, active: True, arity: 1, addresses of inputs [5], Div4(idx: 11, active: True, arity: 1, addresses of inputs [8], Min(idx: 16, active: True, arity: 2, addresses of inputs [7, 8], Min(idx: 17, active: True, arity: 2, addresses of inputs [1, 6], Max(idx: 22, active: True, arity: 2, addresses of inputs [17, 16], Max(idx: 23, active: True, arity: 2, addresses of inputs [10, 11], Max(idx: 34, active: True, arity: 2, addresses of inputs [3, 23], Div2(idx: 48, active: True, arity: 1, addresses of inputs [34], Sub(idx: 61, active: True, arity: 2, addresses of inputs [4, 48], OutputNode(idx: 63, active: True, arity: 1, addresses of inputs [61], OutputNode(idx: 64, active: True, arity: 1, addresses of inputs [22]])",
    "pretty_str": "\n00   InputNode          \t09   Div4               \t18   Div2               \t27   Max                \t36   Avg                \t45   Add                \t54   Add                \t63 * OutputNode (61)    \t\n01 * InputNode          \t10 * Div2 (05)          \t19   Identity           \t28   Min                \t37   Identity           \t46   Max                \t55   Const255           \t64 * OutputNode (22)    \t\n02   InputNode          \t11 * Div4 (08)          \t20   SubS               \t29   Const255           \t38   Div4               \t47   Sub                \t56   Identity           \t                        \t\n03 * InputNode          \t12   Max                \t21   Identity           \t30   SubS               \t39   SubS               \t48 * Div2 (34)          \t57   Conditional        \t                        \t\n04 * InputNode          \t13   SubS               \t22 * Max (17,16)        \t31   Max                \t40   Const255           \t49   Const0             \t58   Conditional        \t                        \t\n05 * InputNode          \t14   Div4               \t23 * Max (10,11)        \t32   Inversion          \t41   Sub                \t50   SubS               \t59   Identity           \t                        \t\n06 * InputNode          \t15   Const0             \t24   SubS               \t33   AddS               \t42   SubS               \t51   AddS               \t60   Identity           \t                        \t\n07 * InputNode          \t16 * Min (07,08)        \t25   Div4               \t34 * Max (03,23)        \t43   Add                \t52   Add                \t61 * Sub (04,48)        \t                        \t\n08 * InputNode          \t17 * Min (01,06)        \t26   Inversion          \t35   Conditional        \t44   SubS               \t53   Add                \t62   Inversion          \t                        \t\n"
}